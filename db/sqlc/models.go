// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"time"

	"github.com/google/uuid"
)

type AccessToken struct {
	ID        uuid.UUID `json:"id"`
	UserID    uuid.UUID `json:"userId"`
	Token     string    `json:"token"`
	ExpiresAt time.Time `json:"expiresAt"`
}

type BuyOrder struct {
	ID        uuid.UUID `json:"id"`
	User      uuid.UUID `json:"user"`
	Stock     uuid.UUID `json:"stock"`
	Price     int32     `json:"price"`
	Quantity  int32     `json:"quantity"`
	Fulfilled int32     `json:"fulfilled"`
}

type News struct {
	ID        uuid.UUID `json:"id"`
	Title     string    `json:"title"`
	Author    string    `json:"author"`
	Content   string    `json:"content"`
	Tag       string    `json:"tag"`
	CreatedAt time.Time `json:"createdAt"`
}

type NewsSentiment struct {
	ID        uuid.UUID `json:"id"`
	ArticleID uuid.UUID `json:"articleId"`
	UserID    uuid.UUID `json:"userId"`
	Like      bool      `json:"like"`
	Dislike   bool      `json:"dislike"`
}

type Portfolio struct {
	ID            uuid.UUID `json:"id"`
	UserID        uuid.UUID `json:"userId"`
	StockID       uuid.UUID `json:"stockId"`
	PurchasePrice string    `json:"purchasePrice"`
	PurchasedAt   time.Time `json:"purchasedAt"`
}

type PriceHistory struct {
	ID      uuid.UUID `json:"id"`
	StockID uuid.UUID `json:"stockId"`
	Price   string    `json:"price"`
	PriceAt time.Time `json:"priceAt"`
}

type RefreshToken struct {
	ID        uuid.UUID `json:"id"`
	UserID    uuid.UUID `json:"userId"`
	Token     string    `json:"token"`
	ExpiresAt time.Time `json:"expiresAt"`
}

type SellOrder struct {
	ID        uuid.UUID `json:"id"`
	User      uuid.UUID `json:"user"`
	Stock     uuid.UUID `json:"stock"`
	Price     int32     `json:"price"`
	Quantity  int32     `json:"quantity"`
	Fulfilled int32     `json:"fulfilled"`
}

type Stock struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Symbol   string    `json:"symbol"`
	Price    string    `json:"price"`
	IsCrypto bool      `json:"isCrypto"`
	IsStock  bool      `json:"isStock"`
	Quantity int32     `json:"quantity"`
}

type Trade struct {
	ID        uuid.UUID `json:"id"`
	BuyOrder  uuid.UUID `json:"buyOrder"`
	SellOrder uuid.UUID `json:"sellOrder"`
	Price     int32     `json:"price"`
	Quantity  int32     `json:"quantity"`
}

type User struct {
	ID       uuid.UUID `json:"id"`
	FullName string    `json:"fullName"`
	Email    string    `json:"email"`
	Picture  string    `json:"picture"`
	Balance  string    `json:"balance"`
}
