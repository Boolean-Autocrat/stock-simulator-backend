version: "3.9"
services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.5.3
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 22181:2181

  # kafka:
  #   image: confluentinc/cp-kafka:7.5.3
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:16-alpine3.19
    restart: always
    environment:
      - PGTZ="GMT+5:30"
      - TZ="GMT+5:30"
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sms_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  api:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DB_SOURCE=postgresql://postgres:postgres@postgres:5432/sms_db?sslmode=disable
    depends_on:
      - postgres
    entrypoint: ["./wait-for-it.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/main"]

volumes:
  postgres_data:
